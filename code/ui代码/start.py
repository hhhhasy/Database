# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'start.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox

class Ui_MainWindow(object):
    def setupUi(self, MainWindow,db,me):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(352, 472)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(140, 40, 201, 51))
        font = QtGui.QFont()
        font.setPointSize(30)
        font.setBold(False)
        font.setWeight(50)
        self.label.setFont(font)
        self.label.setStyleSheet("color:rgb(255, 255, 255)")
        self.label.setTextFormat(QtCore.Qt.PlainText)
        self.label.setIndent(3)
        self.label.setObjectName("label")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(10, 390, 93, 31))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(250, 390, 93, 31))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(130, 390, 93, 31))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(15)
        font.setBold(False)
        font.setWeight(50)
        self.pushButton_3.setFont(font)
        self.pushButton_3.setObjectName("pushButton_3")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setGeometry(QtCore.QRect(90, 190, 181, 31))
        self.lineEdit_2.setStyleSheet("border:1px solid rgb(0,0,0);\n"
"border-radius:8px;")
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(0, 0, 351, 471))
        '''self.label_2.setStyleSheet("border-image:url(log.jpg);\n"
"\n"
"border:2px solid rgb(0,0,0);\n"
"border-radius:20px;")'''
        self.label_2.setText("")
        self.label_2.setObjectName("label_2")
        self.lineEdit_3 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_3.setGeometry(QtCore.QRect(90, 240, 181, 31))
        self.lineEdit_3.setStyleSheet("border:1px solid rgb(0,0,0);\n"
"border-radius:8px;")
        self.lineEdit_3.setText("")
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.checkBox = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox.setGeometry(QtCore.QRect(90, 300, 91, 19))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.checkBox.setFont(font)
        self.checkBox.setStyleSheet("color: rgb(255, 0, 0);\n"
"")
        self.checkBox.setObjectName("checkBox")
        self.checkBox_2 = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_2.setGeometry(QtCore.QRect(200, 300, 91, 19))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.checkBox_2.setFont(font)
        self.checkBox_2.setStyleSheet("color: rgb(255, 0, 0);")
        self.checkBox_2.setObjectName("checkBox_2")

        font = QtGui.QFont()
        font.setPointSize(15)

        self.label_2.raise_()
        self.pushButton.raise_()
        self.pushButton_2.raise_()
        self.pushButton_3.raise_()
        self.label.raise_()
        self.lineEdit_3.raise_()
        self.lineEdit_2.raise_()
        self.checkBox.raise_()
        self.checkBox_2.raise_()

        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        # type: ignore
        self.pushButton_2.clicked.connect(MainWindow.close)  # type: ignore
        self.pushButton_2.clicked.connect(MainWindow.close)  # type: ignore
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "欢迎登录"))
        self.pushButton.setText(_translate("MainWindow", "登录"))
        self.pushButton_2.setText(_translate("MainWindow", "退出"))
        self.pushButton_3.setText(_translate("MainWindow", "注册"))
        self.lineEdit_2.setPlaceholderText(_translate("MainWindow", "账号"))
        self.lineEdit_3.setPlaceholderText(_translate("MainWindow", "密码"))
        self.lineEdit_3.setEchoMode(QtWidgets.QLineEdit.Password)
        self.checkBox.setText(_translate("MainWindow", "用户"))
        self.checkBox_2.setText(_translate("MainWindow", "管理员"))



    def trans(self, ui1, ui2,ui3,db,me,pui):

        if self.checkBox.isChecked() and not self.checkBox_2.isChecked():
            admin_username = self.lineEdit_2.text()
            admin_pass = self.lineEdit_3.text()

            if admin_pass == '' or admin_username == '':
                msg_box = QMessageBox(QMessageBox.Critical, '错误', '请输入完整消息')
                msg_box.exec_()

            else:
                cursor = db.cursor()  # 使用cursor()方法获取操作游标
                sql = "SELECT * FROM 用户 WHERE 账号 = '%s'" % (admin_username)  # SQL 查询语句

                # 执行SQL语句
                try:
                    cursor.execute(sql)
                    # 获取所有记录列表
                    results = cursor.fetchone()

                    radmin_pass = results[3]

                    if admin_pass == radmin_pass:
                        self.yes = True
                        me.initial(results[0], results[1], results[2], results[3], results[4], results[5])
                        pui.me=me
                        ui1.close()
                        ui2.show()

                    else:
                        msg_box = QMessageBox(QMessageBox.Critical, '错误', '密码错误')
                        msg_box.exec_()

                except:
                    msg_box = QMessageBox(QMessageBox.Critical, '错误', '该用户不存在')
                    msg_box.exec_()



        elif self.checkBox_2.isChecked() and not self.checkBox.isChecked():
            admin_username = self.lineEdit_2.text()
            admin_pass = self.lineEdit_3.text()
            if admin_username=='2210737' and admin_pass=='Aaa041082':
                ui1.close()
                ui3.show()
            else:
                msg_box = QMessageBox(QMessageBox.Critical, '错误', '信息错误')
                msg_box.exec_()

        else:
            msg_box = QMessageBox(QMessageBox.Critical, '错误', '勾选错误')
            msg_box.exec_()





